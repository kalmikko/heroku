{"version":3,"sources":["component/phonebook.js","index.js"],"names":["baseUrl","phonebook","axios","get","then","response","data","newObject","post","id","put","concat","delete","Filter","_ref","filter","persons","undefined","row","name","toLowerCase","includes","react_default","a","createElement","src_Rows","Rows","_ref2","map","src_Row","key","Row","_ref3","number","onSubmit","event","preventDefault","window","confirm","phoneService","location","reload","type","Notification","_ref4","message","className","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","addedMessage","setMessage","useEffect","src_Notification","value","onChange","target","i","new_id","len","length","nameObject","nameFound","console","log","setTimeout","catch","error","returnData","src_Filter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.85454f04.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/phonebook'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { \n    getAll: getAll, \n    create: create, \n    update: update,\n    remove: remove\n  }","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport phoneService from './component/phonebook'\nimport './index.css'\n\nconst Filter = ({ filter, persons }) => {\n    if(filter === '' || filter === undefined){\n        \n    }else{\n        persons = persons.filter(row => \n            row.name.toLowerCase()\n            .includes(filter.toLowerCase())\n        )\n    }\n    return (\n        <Rows persons={persons} />\n    )\n}\n\nconst Rows = ({ persons }) => {\n    const rows = () => persons.map(row => \n        <Row \n            key={row.name}\n            row={row}\n        />\n    )\n    return (\n        <div>{rows()}</div>\n    )\n}\n\nconst Row = ({ row }) => {\n    const deletePerson = (event) => {\n        event.preventDefault()\n        if(window.confirm(`remove ${row.name}?`)){\n            phoneService.remove(row.id)\n            window.location.reload(true)\n        }\n    }\n    return (\n        <div>\n            {row.name}, {row.number}\n            <form onSubmit={deletePerson}>\n                <button type='submit' >delete</button>\n            </form>\n        </div>\n    )\n}\n\nconst Notification = ({ message} ) => {\n    if (message == null){\n        return null\n    }\n    return (\n        <div className=\"message\">\n            {message}\n        </div>\n    )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [Â filter, setFilter] = useState('')\n  const [ addedMessage, setMessage] = useState(null)\n\n  const handleName = (event) => {\n      setNewName(event.target.value)\n  }\n  const handleNumber = (event) => {\n      setNewNumber(event.target.value)\n  }\n  const handleFilter = (event) => {\n      setFilter(event.target.value)\n  }\n  const addPerson = (event) => {\n      event.preventDefault()\n      const len = persons.length\n      const nameObject = {\n          id: len + 1,\n          name: newName, \n          number: newNumber}\n      var i \n      var new_id\n      var nameFound = 0\n      for(i=0;i<len;i++){\n        if(nameObject.name.toLowerCase() === persons[i].name.toLowerCase()){\n            nameFound = 1\n            new_id = i\n        }\n      }\n      if(nameFound === 0){\n          console.log(nameObject)\n        phoneService.create(nameObject)\n            .then(data => {\n                setPersons(persons.concat(data))\n                setNewName('')\n                setMessage(`${newName} added`)\n                setTimeout(() => {setMessage(null)},2000)\n            }).catch(error => {\n                    console.log(error.response.data)\n                }\n            )\n      }else{\n          if(window.confirm(`${newName} is already in phonebook, replace old number with new?`)){\n            const newObject = {\n                id: new_id,\n                name: newName, \n                number: newNumber}\n            phoneService.update(new_id, newObject)\n            .then(returnData => {\n                setPersons([])\n                phoneService.getAll()\n                    .then(data => {\n                        if(data.id!==new_id){\n                            setPersons(persons.concat(data))\n                        }else{\n                            setPersons(persons.concat(newObject))\n                        }\n                    })\n            })\n          }\n      }\n  }\n\n  useEffect(() => {\n    phoneService.getAll()\n        .then(data => {        \n            setPersons(data)      \n        })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <div>\n            <Notification message={addedMessage} />\n            filter shown with: <input \n                value={filter}\n                onChange={handleFilter}\n            />\n            <h2>add a new</h2>\n          <form onSubmit={addPerson}>\n            name: <input\n                value={newName}\n                onChange={handleName}\n            />\n            <br />\n            number: <input \n                value={newNumber}\n                onChange={handleNumber}\n            /> \n            <br />\n            <button type=\"submit\">save</button>\n          </form>\n        </div>\n      <h2>Numbers</h2>\n      <Filter persons = {persons} filter={filter}/>\n    </div>\n  )\n}\n\nconst refresh = () => {\n    ReactDOM.render(<App />, document.getElementById('root'))\n}\n\nrefresh()\n\nexport default App"],"sourceRoot":""}